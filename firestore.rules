
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    // User rules
    match /users/{userId} {
      allow read: if isAuth();
      // Allow user creation for anyone authenticated
      allow create: if isAuth();
      // Allow users to update their own data, but NOT their roles
      // Allow admins to update anything
      allow update: if (isOwner(userId) && request.resource.data.roles == resource.data.roles) || isAdmin();
    }

    // Product rules
    match /products/{productId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }

    // Order rules
    match /orders/{orderId} {
      allow read, update: if isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.delivery == true;
      allow create: if isAuth();
      // Customers can only access their own orders
      // `list` is needed for queries
      allow list: if isAdmin() || (isAuth() && request.query.customerId == request.auth.uid);
    }
  }
}
