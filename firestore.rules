
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions to keep rules clean
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the user making the request has the 'admin' role in their own document in Firestore.
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin != null;
    }

    match /users/{userId} {
      // READ: An admin can read any user profile. A user can read their own.
      // This is needed for the admin panel to list all users.
      allow read: if isOwner(userId) || isAdmin();

      // CREATE: Any authenticated user can create their own user document (registration).
      allow create: if isAuth();

      // UPDATE: A user can update their own document, BUT CANNOT change their roles.
      // Only an admin can update roles for any user.
      allow update: if isOwner(userId) && !("roles" in request.resource.data) || 
                       isAdmin() && "roles" in request.resource.data;

      // DELETE: Only the user themselves can delete their account.
      allow delete: if isOwner(userId);
    }
  }
}
