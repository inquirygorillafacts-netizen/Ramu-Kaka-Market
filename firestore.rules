rules_version = '2';

// Helper function to check if a user has a specific role
function hasRole(role) {
  return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role] != null;
}

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/update their own profile.
    // Admins can read any profile (for user listing in admin panel).
    // Anyone authenticated can create their own user document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Placeholder for future orders collection
    // Customer can read/create their own orders.
    // Delivery person can read/update orders assigned to them.
    // Admin can read/write all orders.
    match /orders/{orderId} {
      allow read: if (request.auth != null && resource.data.customerId == request.auth.uid) || 
                       (hasRole('delivery') && resource.data.assignedTo == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.delivery.deliveryId) ||
                       hasRole('admin');
      allow create: if request.auth != null;
      allow update: if hasRole('delivery') || hasRole('admin');
      allow delete: if hasRole('admin');
    }
  }
}
