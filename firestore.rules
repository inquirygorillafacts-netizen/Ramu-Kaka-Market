rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has a specific role
    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role] != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // ANY authenticated user can CREATE their own user document
      allow create: if request.auth != null;

      // Users can READ their own document.
      // Admins can READ any user document.
      allow read: if request.auth != null && (request.auth.uid == userId || hasRole('admin'));

      // Users can UPDATE their own document.
      // Admins can UPDATE any user document (to change roles).
      allow update: if request.auth != null && (request.auth.uid == userId || hasRole('admin'));

      // Only admins can DELETE users.
      allow delete: if request.auth != null && hasRole('admin');
    }

    // Placeholder rules for a future 'orders' collection
    match /orders/{orderId} {
      // A customer can read their own orders.
      // A delivery person can read orders assigned to them.
      // An admin can read any order.
      allow read: if request.auth != null && (
        resource.data.customerId == request.auth.uid ||
        (hasRole('delivery') && resource.data.assignedTo == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.delivery.deliveryId) ||
        hasRole('admin')
      );

      // Customers can create their own orders.
      allow create: if request.auth != null && request.resource.data.customerId == request.auth.uid;

      // Admins or the assigned delivery person can update orders (e.g., change status).
      allow update: if request.auth != null && (
        hasRole('admin') ||
        (hasRole('delivery') && resource.data.assignedTo == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.delivery.deliveryId)
      );

      // Default deny all other actions
      allow delete: if false;
    }
  }
}
